# 逗号分隔的主机：端口对列表，用于建立与Kafka集群的初始连接。除非被覆盖，否则适用于所有组件。
spring.kafka.bootstrap-servers=127.0.0.1:9092

#生成者
#当大于零时，启用重试失败的发送
spring.kafka.producer.retries=0
#默认批量大小（以字节为单位）
spring.kafka.producer.batch-size=16384
#生产者可用于缓冲等待发送到服务器的记录的内存总字节数
spring.kafka.producer.buffer-memory=33554432
#指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#消费者
#唯一字符串，用于标识此使用者所属的使用者组
spring.kafka.consumer.group-id=demo-consumer-group
#当Kafka中没有初始偏移量或服务器上不再存在当前偏移量时该怎么办
spring.kafka.consumer.auto-offset-reset=earliest
#是否在后台定期提交消费者的偏移量
spring.kafka.consumer.enable-auto-commit=true
#如果'enable.auto.commit'设置为true，则消费者偏移自动提交给Kafka的频率
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer